@font-face {
  font-family: "akrobatblack";
  src: url("../fonts/akrobat-black-webfont.woff2") format("woff2"), url("../fonts/akrobat-black-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "akrobatbold";
  src: url("../fonts/akrobat-bold-webfont.woff2") format("woff2"), url("../fonts/akrobat-bold-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "akrobatextrabold";
  src: url("../fonts/akrobat-extrabold-webfont.woff2") format("woff2"), url("../fonts/akrobat-extrabold-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "akrobatextralight";
  src: url("../fonts/akrobat-extralight-webfont.woff2") format("woff2"), url("../fonts/akrobat-extralight-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "akrobatlight";
  src: url("../fonts/akrobat-light-webfont.woff2") format("woff2"), url("../fonts/akrobat-light-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "akrobatregular";
  src: url("../fonts/akrobat-regular-webfont.woff2") format("woff2"), url("../fonts/akrobat-regular-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "akrobatsemibold";
  src: url("../fonts/akrobat-semibold-webfont.woff2") format("woff2"), url("../fonts/akrobat-semibold-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "akrobatthin";
  src: url("../fonts/akrobat-thin-webfont.woff2") format("woff2"), url("../fonts/akrobat-thin-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'good_timesregular';
  src: url("../fonts/good_times_rg-webfont.woff2") format("woff2"), url("../fonts/good_times_rg-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

/* ---------------------------------------------------- */
/* ----- GLOBAL STYLES ----- */
/* ---------------------------------------------------- */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  height: 100%;
}

a {
  text-decoration: none;
  color: inherit;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

figure {
  margin: 0;
}

ul {
  list-style: none;
}

li {
  list-style: none;
}

h1 {
  margin: 0;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
}

input[type="checkbox"] {
  display: none;
}

input[type="checkbox"] + label {
  color: black;
  display: inline-flex;
}

input[type="checkbox"] + label::before {
  content: "";
  display: inline-block;
  width: 14px;
  height: 14px;
  cursor: pointer;
  border-radius: 2px;
  background: #fff;
  transform: scale(0.8);
  margin: 3px 0 0 4px;
}

input[type="checkbox"]:checked + label::before {
  content: "";
  width: 14px;
  height: 14px;
  transform: scale(0.8);
  margin-top: 3px;
}

button {
  background: none;
  border: 0;
}

/* --- CLEARFIX --- */
.clearfix::after {
  content: "";
  display: table;
  clear: both;
}

/* --- WEBPAGE CONTAINER --- */
.container {
  margin: 0 auto;
  width: 100%;
  max-width: 1920px;
  position: relative;
}

/* ----- END OF GLOBAL STYLES ----- */
/* ---------------------------------------------------- */
/* ----- HEADER ----- */
/* ---------------------------------------------------- */
/* ----- END OF HEADER ----- */
/* ---------------------------------------------------- */
/* ----- MAIN ----- */
/* ---------------------------------------------------- */
/* ----- END OF MAIN ----- */
/* ---------------------------------------------------- */
/* ----- FOOTER ----- */
/* ---------------------------------------------------- */
/* ----- END OF FOOTER ----- */
/* ----- HERO ----- */
/* ----- END OF HERO ----- */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
